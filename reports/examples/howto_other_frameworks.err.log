Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
logdensity_fn = aesara.function((y_vv,), total_logdensity, mode="NUMBA")
logdensity_fn(1.)
------------------


[31m---------------------------------------------------------------------------[39m
[31mTypeError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[5][39m[32m, line 1[39m
[32m----> [39m[32m1[39m logdensity_fn = [43maesara[49m[43m.[49m[43mfunction[49m[43m([49m[43m([49m[43my_vv[49m[43m,[49m[43m)[49m[43m,[49m[43m [49m[43mtotal_logdensity[49m[43m,[49m[43m [49m[43mmode[49m[43m=[49m[33;43m"[39;49m[33;43mNUMBA[39;49m[33;43m"[39;49m[43m)[49m
[32m      2[39m logdensity_fn([32m1.[39m)

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/compile/function/__init__.py:317[39m, in [36mfunction[39m[34m(inputs, outputs, mode, updates, givens, no_default_updates, accept_inplace, name, rebuild_strict, allow_input_downcast, profile, on_unused_input)[39m
[32m    311[39m     fn = orig_function(
[32m    312[39m         inputs, outputs, mode=mode, accept_inplace=accept_inplace, name=name
[32m    313[39m     )
[32m    314[39m [38;5;28;01melse[39;00m:
[32m    315[39m     [38;5;66;03m# note: pfunc will also call orig_function -- orig_function is[39;00m
[32m    316[39m     [38;5;66;03m#      a choke point that all compilation must pass through[39;00m
[32m--> [39m[32m317[39m     fn = [43mpfunc[49m[43m([49m
[32m    318[39m [43m        [49m[43mparams[49m[43m=[49m[43minputs[49m[43m,[49m
[32m    319[39m [43m        [49m[43moutputs[49m[43m=[49m[43moutputs[49m[43m,[49m
[32m    320[39m [43m        [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m    321[39m [43m        [49m[43mupdates[49m[43m=[49m[43mupdates[49m[43m,[49m
[32m    322[39m [43m        [49m[43mgivens[49m[43m=[49m[43mgivens[49m[43m,[49m
[32m    323[39m [43m        [49m[43mno_default_updates[49m[43m=[49m[43mno_default_updates[49m[43m,[49m
[32m    324[39m [43m        [49m[43maccept_inplace[49m[43m=[49m[43maccept_inplace[49m[43m,[49m
[32m    325[39m [43m        [49m[43mname[49m[43m=[49m[43mname[49m[43m,[49m
[32m    326[39m [43m        [49m[43mrebuild_strict[49m[43m=[49m[43mrebuild_strict[49m[43m,[49m
[32m    327[39m [43m        [49m[43mallow_input_downcast[49m[43m=[49m[43mallow_input_downcast[49m[43m,[49m
[32m    328[39m [43m        [49m[43mon_unused_input[49m[43m=[49m[43mon_unused_input[49m[43m,[49m
[32m    329[39m [43m        [49m[43mprofile[49m[43m=[49m[43mprofile[49m[43m,[49m
[32m    330[39m [43m        [49m[43moutput_keys[49m[43m=[49m[43moutput_keys[49m[43m,[49m
[32m    331[39m [43m    [49m[43m)[49m
[32m    332[39m [38;5;28;01mreturn[39;00m fn

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/compile/function/pfunc.py:367[39m, in [36mpfunc[39m[34m(params, outputs, mode, updates, givens, no_default_updates, accept_inplace, name, rebuild_strict, allow_input_downcast, profile, on_unused_input, output_keys, fgraph)[39m
[32m    353[39m     profile = ProfileStats(message=profile)
[32m    355[39m inputs, cloned_outputs = construct_pfunc_ins_and_outs(
[32m    356[39m     params,
[32m    357[39m     outputs,
[32m   (...)[39m[32m    364[39m     fgraph=fgraph,
[32m    365[39m )
[32m--> [39m[32m367[39m [38;5;28;01mreturn[39;00m [43morig_function[49m[43m([49m
[32m    368[39m [43m    [49m[43minputs[49m[43m,[49m
[32m    369[39m [43m    [49m[43mcloned_outputs[49m[43m,[49m
[32m    370[39m [43m    [49m[43mmode[49m[43m,[49m
[32m    371[39m [43m    [49m[43maccept_inplace[49m[43m=[49m[43maccept_inplace[49m[43m,[49m
[32m    372[39m [43m    [49m[43mname[49m[43m=[49m[43mname[49m[43m,[49m
[32m    373[39m [43m    [49m[43mprofile[49m[43m=[49m[43mprofile[49m[43m,[49m
[32m    374[39m [43m    [49m[43mon_unused_input[49m[43m=[49m[43mon_unused_input[49m[43m,[49m
[32m    375[39m [43m    [49m[43moutput_keys[49m[43m=[49m[43moutput_keys[49m[43m,[49m
[32m    376[39m [43m    [49m[43mfgraph[49m[43m=[49m[43mfgraph[49m[43m,[49m
[32m    377[39m [43m[49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/compile/function/types.py:1815[39m, in [36morig_function[39m[34m(inputs, outputs, mode, accept_inplace, name, profile, on_unused_input, output_keys, fgraph)[39m
[32m   1803[39m     m = Maker(
[32m   1804[39m         inputs,
[32m   1805[39m         outputs,
[32m   (...)[39m[32m   1812[39m         fgraph=fgraph,
[32m   1813[39m     )
[32m   1814[39m     [38;5;28;01mwith[39;00m config.change_flags(compute_test_value=[33m"[39m[33moff[39m[33m"[39m):
[32m-> [39m[32m1815[39m         fn = [43mm[49m[43m.[49m[43mcreate[49m[43m([49m[43mdefaults[49m[43m)[49m
[32m   1816[39m [38;5;28;01mfinally[39;00m:
[32m   1817[39m     t2 = time.perf_counter()

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/compile/function/types.py:1708[39m, in [36mFunctionMaker.create[39m[34m(self, input_storage, trustme, storage_map)[39m
[32m   1705[39m start_import_time = aesara.link.c.cmodule.import_time
[32m   1707[39m [38;5;28;01mwith[39;00m config.change_flags(traceback__limit=config.traceback__compile_limit):
[32m-> [39m[32m1708[39m     _fn, _i, _o = [38;5;28;43mself[39;49m[43m.[49m[43mlinker[49m[43m.[49m[43mmake_thunk[49m[43m([49m
[32m   1709[39m [43m        [49m[43minput_storage[49m[43m=[49m[43minput_storage_lists[49m[43m,[49m[43m [49m[43mstorage_map[49m[43m=[49m[43mstorage_map[49m
[32m   1710[39m [43m    [49m[43m)[49m
[32m   1712[39m end_linker = time.perf_counter()
[32m   1714[39m linker_time = end_linker - start_linker

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/link/basic.py:254[39m, in [36mLocalLinker.make_thunk[39m[34m(self, input_storage, output_storage, storage_map, **kwargs)[39m
[32m    247[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mmake_thunk[39m(
[32m    248[39m     [38;5;28mself[39m,
[32m    249[39m     input_storage: Optional[[33m"[39m[33mInputStorageType[39m[33m"[39m] = [38;5;28;01mNone[39;00m,
[32m   (...)[39m[32m    252[39m     **kwargs,
[32m    253[39m ) -> Tuple[[33m"[39m[33mBasicThunkType[39m[33m"[39m, [33m"[39m[33mInputStorageType[39m[33m"[39m, [33m"[39m[33mOutputStorageType[39m[33m"[39m]:
[32m--> [39m[32m254[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mmake_all[49m[43m([49m
[32m    255[39m [43m        [49m[43minput_storage[49m[43m=[49m[43minput_storage[49m[43m,[49m
[32m    256[39m [43m        [49m[43moutput_storage[49m[43m=[49m[43moutput_storage[49m[43m,[49m
[32m    257[39m [43m        [49m[43mstorage_map[49m[43m=[49m[43mstorage_map[49m[43m,[49m
[32m    258[39m [43m    [49m[43m)[49m[:[32m3[39m]

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/link/basic.py:697[39m, in [36mJITLinker.make_all[39m[34m(self, input_storage, output_storage, storage_map)[39m
[32m    694[39m [38;5;28;01mfor[39;00m k [38;5;129;01min[39;00m storage_map:
[32m    695[39m     compute_map[k] = [k.owner [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m]
[32m--> [39m[32m697[39m thunks, nodes, jit_fn = [38;5;28;43mself[39;49m[43m.[49m[43mcreate_jitable_thunk[49m[43m([49m
[32m    698[39m [43m    [49m[43mcompute_map[49m[43m,[49m[43m [49m[43mnodes[49m[43m,[49m[43m [49m[43minput_storage[49m[43m,[49m[43m [49m[43moutput_storage[49m[43m,[49m[43m [49m[43mstorage_map[49m
[32m    699[39m [43m[49m[43m)[49m
[32m    701[39m computed, last_user = gc_helper(nodes)
[32m    703[39m [38;5;28;01mif[39;00m [38;5;28mself[39m.allow_gc:

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/link/basic.py:647[39m, in [36mJITLinker.create_jitable_thunk[39m[34m(self, compute_map, order, input_storage, output_storage, storage_map)[39m
[32m    644[39m [38;5;66;03m# This is a bit hackish, but we only return one of the output nodes[39;00m
[32m    645[39m output_nodes = [o.owner [38;5;28;01mfor[39;00m o [38;5;129;01min[39;00m [38;5;28mself[39m.fgraph.outputs [38;5;28;01mif[39;00m o.owner [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m][:[32m1[39m]
[32m--> [39m[32m647[39m converted_fgraph = [38;5;28;43mself[39;49m[43m.[49m[43mfgraph_convert[49m[43m([49m
[32m    648[39m [43m    [49m[38;5;28;43mself[39;49m[43m.[49m[43mfgraph[49m[43m,[49m
[32m    649[39m [43m    [49m[43morder[49m[43m=[49m[43morder[49m[43m,[49m
[32m    650[39m [43m    [49m[43minput_storage[49m[43m=[49m[43minput_storage[49m[43m,[49m
[32m    651[39m [43m    [49m[43moutput_storage[49m[43m=[49m[43moutput_storage[49m[43m,[49m
[32m    652[39m [43m    [49m[43mstorage_map[49m[43m=[49m[43mstorage_map[49m[43m,[49m
[32m    653[39m [43m[49m[43m)[49m
[32m    655[39m thunk_inputs = [38;5;28mself[39m.create_thunk_inputs(storage_map)
[32m    657[39m thunks = []

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/link/numba/linker.py:25[39m, in [36mNumbaLinker.fgraph_convert[39m[34m(self, fgraph, **kwargs)[39m
[32m     24[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mfgraph_convert[39m([38;5;28mself[39m, fgraph, **kwargs):
[32m---> [39m[32m25[39m     [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01maesara[39;00m[34;01m.[39;00m[34;01mlink[39;00m[34;01m.[39;00m[34;01mnumba[39;00m[34;01m.[39;00m[34;01mdispatch[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m numba_funcify
[32m     27[39m     [38;5;28;01mreturn[39;00m numba_funcify(fgraph, **kwargs)

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/link/numba/dispatch/__init__.py:2[39m
[32m      1[39m [38;5;66;03m# isort: off[39;00m
[32m----> [39m[32m2[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01maesara[39;00m[34;01m.[39;00m[34;01mlink[39;00m[34;01m.[39;00m[34;01mnumba[39;00m[34;01m.[39;00m[34;01mdispatch[39;00m[34;01m.[39;00m[34;01mbasic[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m (
[32m      3[39m     numba_funcify,
[32m      4[39m     numba_const_convert,
[32m      5[39m     numba_njit,
[32m      6[39m )
[32m      8[39m [38;5;66;03m# Load dispatch specializations[39;00m
[32m      9[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01maesara[39;00m[34;01m.[39;00m[34;01mlink[39;00m[34;01m.[39;00m[34;01mnumba[39;00m[34;01m.[39;00m[34;01mdispatch[39;00m[34;01m.[39;00m[34;01mscalar[39;00m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/aesara/link/numba/dispatch/basic.py:198[39m
[32m    192[39m             [38;5;28;01mreturn[39;00m [38;5;28;01mlambda[39;00m x, y: [38;5;28;01mFalse[39;00m
[32m    195[39m enable_slice_boxing()
[32m--> [39m[32m198[39m [38;5;129;43m@generated_jit[39;49m
[32m    199[39m [38;5;28;43;01mdef[39;49;00m[38;5;250;43m [39;49m[34;43mto_scalar[39;49m[43m([49m[43mx[49m[43m)[49m[43m:[49m
[32m    200[39m [43m    [49m[38;5;28;43;01mif[39;49;00m[43m [49m[38;5;28;43misinstance[39;49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43m([49m[43mnumba[49m[43m.[49m[43mtypes[49m[43m.[49m[43mNumber[49m[43m,[49m[43m [49m[43mnumba[49m[43m.[49m[43mtypes[49m[43m.[49m[43mBoolean[49m[43m)[49m[43m)[49m[43m:[49m
[32m    201[39m [43m        [49m[38;5;28;43;01mreturn[39;49;00m[43m [49m[38;5;28;43;01mlambda[39;49;00m[43m [49m[43mx[49m[43m:[49m[43m [49m[43mx[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/numba/core/decorators.py:221[39m, in [36m_jit.<locals>.wrapper[39m[34m(func)[39m
[32m    219[39m [38;5;28;01mif[39;00m config.DISABLE_JIT [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m target == [33m'[39m[33mnpyufunc[39m[33m'[39m:
[32m    220[39m     [38;5;28;01mreturn[39;00m func
[32m--> [39m[32m221[39m disp = [43mdispatcher[49m[43m([49m[43mpy_func[49m[43m=[49m[43mfunc[49m[43m,[49m[43m [49m[38;5;28;43mlocals[39;49m[43m=[49m[38;5;28;43mlocals[39;49m[43m,[49m
[32m    222[39m [43m                  [49m[43mtargetoptions[49m[43m=[49m[43mtargetoptions[49m[43m,[49m
[32m    223[39m [43m                  [49m[43m*[49m[43m*[49m[43mdispatcher_args[49m[43m)[49m
[32m    224[39m [38;5;28;01mif[39;00m cache:
[32m    225[39m     disp.enable_caching()

[31mTypeError[39m: Dispatcher.__init__() got an unexpected keyword argument 'impl_kind'

